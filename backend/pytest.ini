[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --cov=src
    --cov-branch
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --tb=short
    --asyncio-mode=auto

markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    contract: marks tests as contract tests
    performance: marks tests as performance tests
    unit: marks tests as unit tests

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */alembic/*

[coverage:report]
# Require 80% line coverage, 90% for critical paths
fail_under = 80
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

# Custom (project-specific) invoice domain coverage gate (T004)
# A supplemental 90% line coverage threshold for the invoice router is enforced via:
#  1. Makefile test target invoking: coverage report --fail-under=90 src/routers/invoices.py
#  2. Pytest session finish hook in conftest.py reading below [invoice_coverage] section

[invoice_coverage]
path = src/routers/invoices.py
fail_under = 90

# Fast test mode:
#   Set environment variable FAST_TESTS=1 to skip OpenTelemetry setup during app startup
#   for significantly faster collection/execution when only running quick unit tests.